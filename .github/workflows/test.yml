name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [Windows, Linux]
    runs-on: [self-hosted, "${{ matrix.os }}"]
    steps:
      - name: Log masks on Linux
        if: matrix.os == 'Linux'
        run: echo "::add-mask::$NAME_MASK"

      - name: Log masks on Windows
        if: matrix.os == 'Windows'
        run: echo "::add-mask::$env:NAME_MASK"

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: Install dependencies
        run: deno i --frozen

      - name: Prepare `styled-system`
        run: deno task prepare

      - name: Run `deno fmt`
        run: deno fmt --check

      - name: Run `deno lint`
        run: deno lint

      - name: Run `tsc`
        run: deno run -A npm:typescript/tsc

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cargo Verify Project
        working-directory: ./src-tauri
        run: cargo verify-project

      - name: Cargo Format
        working-directory: ./src-tauri
        run: cargo fmt --check

      - name: Cargo Build
        working-directory: ./src-tauri
        run: cargo build --verbose

      - name: Cargo Test
        working-directory: ./src-tauri
        run: cargo test --verbose

      - name: Cargo Clippy
        working-directory: ./src-tauri
        run: cargo clippy -- -W clippy::pedantic

