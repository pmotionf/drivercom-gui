name: Release

on:
  workflow_run:
    workflows: ["Test"]
    types: [completed]
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    name: release
    strategy:
      matrix:
        os: [Linux]
    runs-on: [self-hosted, "${{ matrix.os }}"]
    defaults:
      run:
        shell: bash
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
      - name: Log masks
        run: echo "::add-mask::$NAME_MASK"

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@stable

      - name: Setup Cargo tooling
        run: cargo install cargo-get

      - name: Parse version
        id: parse-version
        run: |
          echo "VERSION=$(cd "src-tauri" && cargo get package.version && cd ..)" >> $GITHUB_OUTPUT

      - uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: "${{ steps.parse-version.outputs.VERSION }}"
          repo: "pmotionf/drivercom-gui"

      - name: Create release
        id: create-release
        if: ${{ steps.check-tag.outputs.exists != 'true' }}
        run: |
          gh release create --generate-notes "${VERSION}"
          echo "created_release=true" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.parse-version.outputs.VERSION }}
    outputs:
      created_release: ${{ steps.create-release.outputs.created_release }}
      version: ${{ steps.parse-version.outputs.VERSION }}

  assets:
    name: assets
    needs: release
    if: needs.release.outputs.created_release == 'true'
    strategy:
      matrix:
        os: [Windows, Linux]
    runs-on: [self-hosted, "${{ matrix.os }}"]
    permissions:
      contents: write
    steps:
      - name: Log masks on Linux
        if: matrix.os == 'Linux'
        run: echo "::add-mask::$NAME_MASK"

      - name: Log masks on Windows
        if: matrix.os == 'Windows'
        run: echo "::add-mask::$env:NAME_MASK"

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@stable
      - uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: Install dependencies
        run: deno i

      - name: Build
        run: deno task tauri build

      - name: Upload Linux
        if: matrix.os =='Linux'
        run: |
          gh release upload "${VERSION}" \
            src-tauri/target/release/bundle/deb/*.deb \
            src-tauri/target/release/bundle/rpm/*.rpm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.release.outputs.version }}

      - name: Upload Windows
        if: matrix.os == 'Windows'
        run: |
          gh release upload "${VERSION}" \
            src-tauri/target/release/bundle/msi/*.msi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.release.outputs.version }}
